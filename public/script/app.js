// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module('arco', ['ngRoute']);

  app.config([
    '$routeProvider', function($routeProvider) {
      return $routeProvider.when('/login', {
        templateUrl: 'partials/auth/login.html',
        controller: 'AuthLoginCtrl',
        controllerAs: 'auth'
      }).otherwise({
        redirectTo: '/'
      });
    }
  ]);

  app.controller('AppCtrl', [
    '$rootScope', function($rootScope) {
      return $rootScope.$on('changeRouteError', function(event, current, previous, rejection) {
        return console.log('ERROR changing route');
      });
    }
  ]);

  app.controller('HomeCtrl', [
    function() {
      return {};
    }
  ]);

  app.controller('ScoreListCtrl', [
    'Score', function(Score) {
      return {
        scores: []
      };
    }
  ]);

  app.controller('AuthLoginCtrl', [
    'Auth', function(Auth) {
      return {
        login: function(email, password) {
          return Auth.login(email, password, function(data, status, headers, config) {
            console.log(headers());
            console.log(config);
            return console.log('LOGIN success', data);
          }, (function(_this) {
            return function(data, status, headers, config) {
              console.log(status);
              console.log('LOGIN error', data);
              return _this.errors = data.error;
            };
          })(this));
        },
        errors: void 0
      };
    }
  ]);

  app.factory('Routes', [
    function() {
      var BASE_URL;
      BASE_URL = 'http://localhost:4000/';
      return {
        authLogin: BASE_URL + 'auth/login'
      };
    }
  ]);

  app.factory('Score', [
    '$http', function($http) {
      return {};
    }
  ]);

  app.factory('Auth', [
    '$http', 'Routes', function($http, Routes) {
      return {
        login: function(email, password, callback, errorBack) {
          return $http.post(Routes.authLogin, {
            email: email,
            password: password
          }).success(callback).error(errorBack);
        }
      };
    }
  ]);

}).call(this);
